version: "3.6"
services:
  wannadb:
    build:
      dockerfile: Dockerfile
      target: dev
    restart: always
    tty: true
    ports:
      - "8000:8000"
    env_file:
      - wannadb_web/.env/.dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/home/wannadb
    networks:
      - mynetwork

  worker:
    build:
      dockerfile: Dockerfile
      target: worker
    tty: true
    command: [ 'celery', '-A', 'app.celery','worker', '-l', 'info']
    env_file:
      - wannadb_web/.env/.dev
    volumes:
      - ./:/home/wannadb
    networks:
      - mynetwork
    depends_on:
      - wannadb
      - redis


  flower:
    build:
      dockerfile: Dockerfile
      target: worker
    tty: true
    command: [ 'celery', '-A', 'app.celery', 'flower' ]
    env_file:
      - wannadb_web/.env/.dev
    volumes:
      - ./:/home/wannadb
    networks:
      - mynetwork
    ports:
      - "5555:5555"
    depends_on:
      - wannadb
      - redis

  postgres:
    image: postgres
    container_name: postgres-container
    environment:
      POSTGRES_PASSWORD: 0
      POSTGRES_DB: userManagement
    networks:
      - mynetwork
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  pgdata:
